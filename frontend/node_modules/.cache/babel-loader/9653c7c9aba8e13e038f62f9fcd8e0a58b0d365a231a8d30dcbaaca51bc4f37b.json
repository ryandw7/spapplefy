{"ast":null,"code":"//Return url to generate access token with spotify\nconst CLIENT_ID = 'e191ea5f28f7459eb45d6e9d24eb552f';\nconst REDIRECT_URI = \"http://localhost:3000/\";\nconst AUTH_ENDPOINT = \"https://accounts.spotify.com/authorize\";\nconst RESPONSE_TYPE = \"token\";\nconst SCOPE = 'playlist-modify-public playlist-modify-private';\nexport const spotifyAuthFlow = () => {\n  let url = '';\n  url += AUTH_ENDPOINT;\n  url += '?client_id=' + CLIENT_ID;\n  url += '&redirect_uri=' + REDIRECT_URI;\n  url += '&response_type=' + RESPONSE_TYPE;\n  url += '&scope=' + SCOPE;\n  return url;\n};\n\n//hash access token from url after authFlow has successfully been completed\nexport const hashSpotifyToken = () => {\n  const hash = window.location.hash;\n  let accessToken = window.sessionStorage.getItem(\"token\");\n  if (!accessToken && hash) {\n    accessToken = hash.substring(1).split(\"&\").find(elem => elem.startsWith(\"access_token\")).split(\"=\")[1];\n    window.location.href = REDIRECT_URI;\n    window.sessionStorage.setItem(\"spotify_token\", accessToken);\n    window.sessionStorage.setItem(\"authorized\", true);\n  }\n};\n\n//Return data from fetching user info after access token has been retrieved\nexport const fetchSpotifyUser = async () => {\n  try {\n    const res = await fetch('https://api.spotify.com/v1/me?access_token=' + window.sessionStorage.getItem(\"token\"));\n    const data = await res.json();\n    return data;\n  } catch (err) {\n    console.log(`ERROR: ${err}, Unable to retrieve ID`);\n  }\n};","map":{"version":3,"names":["CLIENT_ID","REDIRECT_URI","AUTH_ENDPOINT","RESPONSE_TYPE","SCOPE","spotifyAuthFlow","url","hashSpotifyToken","hash","window","location","accessToken","sessionStorage","getItem","substring","split","find","elem","startsWith","href","setItem","fetchSpotifyUser","res","fetch","data","json","err","console","log"],"sources":["/home/ryan_wilson/spapplefy/src/api_utils/spotifyUtils.js"],"sourcesContent":["\n//Return url to generate access token with spotify\nconst CLIENT_ID = 'e191ea5f28f7459eb45d6e9d24eb552f';\nconst REDIRECT_URI = \"http://localhost:3000/\";\nconst AUTH_ENDPOINT = \"https://accounts.spotify.com/authorize\";\nconst RESPONSE_TYPE = \"token\";\nconst SCOPE = 'playlist-modify-public playlist-modify-private'\n\nexport const spotifyAuthFlow = () => {\n\n    let url = '';\n    url += AUTH_ENDPOINT;\n    url += '?client_id=' + CLIENT_ID;\n    url += '&redirect_uri=' + REDIRECT_URI;\n    url += '&response_type=' + RESPONSE_TYPE;\n    url += '&scope=' + SCOPE;\n    return url;\n}\n\n//hash access token from url after authFlow has successfully been completed\nexport const hashSpotifyToken = () => {\n\n    const hash = window.location.hash;\n    let accessToken = window.sessionStorage.getItem(\"token\");\n    if (!accessToken && hash) {\n        accessToken = hash.substring(1).split(\"&\").find(elem => elem.startsWith(\"access_token\")).split(\"=\")[1];\n        window.location.href = REDIRECT_URI;\n        window.sessionStorage.setItem(\"spotify_token\", accessToken);\n        window.sessionStorage.setItem(\"authorized\", true);\n\n    }\n}\n\n//Return data from fetching user info after access token has been retrieved\nexport const fetchSpotifyUser = async () => {\n\n    try {\n        const res = await fetch('https://api.spotify.com/v1/me?access_token=' + window.sessionStorage.getItem(\"token\"))\n        const data = await res.json();\n        return data;\n    } catch (err) {\n        console.log(`ERROR: ${err}, Unable to retrieve ID`);\n    }\n\n}\n"],"mappings":"AACA;AACA,MAAMA,SAAS,GAAG,kCAAkC;AACpD,MAAMC,YAAY,GAAG,wBAAwB;AAC7C,MAAMC,aAAa,GAAG,wCAAwC;AAC9D,MAAMC,aAAa,GAAG,OAAO;AAC7B,MAAMC,KAAK,GAAG,gDAAgD;AAE9D,OAAO,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAEjC,IAAIC,GAAG,GAAG,EAAE;EACZA,GAAG,IAAIJ,aAAa;EACpBI,GAAG,IAAI,aAAa,GAAGN,SAAS;EAChCM,GAAG,IAAI,gBAAgB,GAAGL,YAAY;EACtCK,GAAG,IAAI,iBAAiB,GAAGH,aAAa;EACxCG,GAAG,IAAI,SAAS,GAAGF,KAAK;EACxB,OAAOE,GAAG;AACd,CAAC;;AAED;AACA,OAAO,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAElC,MAAMC,IAAI,GAAGC,MAAM,CAACC,QAAQ,CAACF,IAAI;EACjC,IAAIG,WAAW,GAAGF,MAAM,CAACG,cAAc,CAACC,OAAO,CAAC,OAAO,CAAC;EACxD,IAAI,CAACF,WAAW,IAAIH,IAAI,EAAE;IACtBG,WAAW,GAAGH,IAAI,CAACM,SAAS,CAAC,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAACC,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,UAAU,CAAC,cAAc,CAAC,CAAC,CAACH,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACtGN,MAAM,CAACC,QAAQ,CAACS,IAAI,GAAGlB,YAAY;IACnCQ,MAAM,CAACG,cAAc,CAACQ,OAAO,CAAC,eAAe,EAAET,WAAW,CAAC;IAC3DF,MAAM,CAACG,cAAc,CAACQ,OAAO,CAAC,YAAY,EAAE,IAAI,CAAC;EAErD;AACJ,CAAC;;AAED;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAAA,CAAA,KAAY;EAExC,IAAI;IACA,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,6CAA6C,GAAGd,MAAM,CAACG,cAAc,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC;IAC/G,MAAMW,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAI,CAAC,CAAC;IAC7B,OAAOD,IAAI;EACf,CAAC,CAAC,OAAOE,GAAG,EAAE;IACVC,OAAO,CAACC,GAAG,CAAC,UAAUF,GAAG,yBAAyB,CAAC;EACvD;AAEJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}